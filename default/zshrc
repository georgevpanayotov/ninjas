unsetopt beep
setopt inc_append_history

bindkey -v

# By default, in vi mode, backspace only deletes characters that have been typed since entering
# insert mode. This allows backspace to delete without constraint.
bindkey -M viins "^?" backward-delete-char

alias jerbs=jobs
alias exeunt=exit
alias dirs=dirs\ -p

() {
    local platZsh="$(uname).zsh"
    (which $platZsh > /dev/null 2> /dev/null) && source $platZsh
}

# Update the prompt string to include the "prompt_header"
# and set the screen's title if we're inside of a screen.
update_dir() {
    local PROMPT_HEADER="$(prompt_header.py)"
    PS1=" ## $PROMPT_HEADER%c $ "
    if [[ "$STY" != "" ]]; then
        stitle.sh
    fi
}

chpwd() {
    # Update the prompt and screen title whenever we change pwd.
    update_dir
}

zshaddhistory() {
    if [[ "$1" == $'incognito\n' ]]; then
        return 1
    fi

    if (( ! INCOGNITO )); then
        echo -n $1 >> ~/.zshpermanenthistory
    else
        return 1
    fi
}

pvim() {
    vim $@ -c "setlocal buftype=nofile" -c "setlocal bufhidden=hide" -c "setlocal noswapfile" -
}

svim() {
    vim $@ -c "setlocal buftype=nofile" -c "setlocal bufhidden=hide" -c "setlocal noswapfile"
}

() {
    if [[ "$SCREEN_CMD" == "" ]]; then
        local SCREEN_CMD=screen
    fi

    if [[ $(screen -ls | grep -i ${USER}_scr | grep -v "Dead ?" | wc -l) -eq 0 ]]; then
        $SCREEN_CMD -d -m -S ${USER}_scr
    fi

    if [[ $(screen -ls | grep "Dead ?" | wc -l) -ne 0 && "$STY" == "" ]]; then
        echo "Dead screen detected."
        screen -ls | grep "Dead ?"
    fi
}

# Inserts the parameter into the buffer at the current cursor's location. Moves the cursor to the
# end of the inserted token.
insert_in_buffer() {
  local selected=$1

  if [[ "$selected" != "" ]]; then
    local pre=$BUFFER[1,$CURSOR]
    local post=$BUFFER[$(($CURSOR + 1)),$#BUFFER]
    if [[ "$pre[$#pre]" != " " ]]; then
      pre="$pre "
    fi
    if [[ "$post" != "" && "$post[1]" != " " ]]; then
      post=" $post"
    fi

    BUFFER="$pre$selected$post"
    CURSOR=$(( $#pre + $#selected ))
  fi
}

incognito() {
    INCOGNITO=1
}

uncognito() {
    INCOGNITO=0
}

# Update the prompt and screen title at startup.
update_dir

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
